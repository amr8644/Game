
    // SDL_Texture *bgTexture = load_texture("./pictures/light_bg.png");
    // Entity *background = new_entity( position(0, 0), bgTexture);

    // Entity *player[9] = {
    //     new_entity( position(0, 0,0,0), load_texture("./player_1.png") ),
    //     new_entity( position(0, 0,0,0), load_texture("./player_2.png") ),
    //     new_entity(position(0, 0,0,0), load_texture("./player_3.png") ),
    //     new_entity( position(0, 0,0,0), load_texture("./player_4.png") ),
    // }; 

    // Entity *entities[9] = {
    //     new_entity( position(0 , SCREEN_HEIGHT - 120, 32, 32), grassTexture ),
    //     new_entity( position(120 , SCREEN_HEIGHT - 120,32, 32), grassTexture ),
    //     new_entity( position(220 , SCREEN_HEIGHT - 120,32, 32), grassTexture ),
    //     new_entity( position(320 , SCREEN_HEIGHT - 120,32, 32), grassTexture ),
    //     new_entity( position(420 , SCREEN_HEIGHT - 120,32, 32), grassTexture ),
    //     new_entity( position(520 ,SCREEN_HEIGHT - 120,32, 32), grassTexture ),
    //     new_entity( position(620 ,SCREEN_HEIGHT - 120,32, 32), grassTexture ),
    //     new_entity( position(720 ,SCREEN_HEIGHT - 120,32, 32), grassTexture ),
    //     new_entity( position(820 ,SCREEN_HEIGHT - 120,32, 32), grassTexture ),
    // }; 


    //Initialize renderer color
    // SDL_SetRenderDrawColor( renderer, 0xFF, 0xFF, 0xFF, 0xFF );

     // while (dest.y >= -dest.h)
        // {
        //     SDL_RenderClear( renderer );  
        //     dest.y = (int) y_pos;
        //     SDL_RenderCopy(renderer,ball->tex,NULL, &dest);
        //     SDL_RenderPresent(renderer);
        //     y_pos -= (float) SPEED /60;
        //     /* code */
        //     SDL_Delay(1000/60);
        // }



  else if( event.type == SDL_KEYDOWN )
            {
                switch( event.key.keysym.sym )
                {
                    case SDLK_UP:
                        up = 1;
                        down = 0;
                        left = 0;
                        right = 0;
                        break;
                    case SDLK_DOWN:
                         up = 0;
                        down = 1;
                        left = 0;
                        right = 0;
                        break;
                    case SDLK_LEFT:
                        up = 0;
                        down = 0;
                        left = 1;
                        right = 0;
                        break;
                    case SDLK_RIGHT:
                        up = 0;
                        down = 0;
                        left = 0;
                        right = 1;
                        break;
                }  










    SDL_Texture *ballTexture = load_texture("./pictures/ball.png");
    SDL_Texture *tile_texture = load_texture("./pictures/tile32_dark.png");

    Entity *ball = new_entity(position(0,0),ballTexture);
    // Entity *tiles = new_entity(position(random_number(0,SCREEN_WIDTH - 32), random_number(0,SCREEN_HEIGHT - 32)),tile_texture);
    
    SDL_Rect dest;
    SDL_Rect dest2;
    SDL_QueryTexture(ballTexture,NULL,NULL,&dest.w,&dest.h);
    SDL_QueryTexture(tile_texture,NULL,NULL,&dest2.w,&dest2.h);
    float x_vel = SPEED;
    float y_vel = SPEED;
    int up = 0;
    int down = 0;
    int left = 0;
    int right = 0;







           if (x_pos <= 0)
        {
            x_pos = 0;
            x_vel = -x_vel;
        }
        if (y_pos <= 0)
        {
            y_pos = 0;
            y_vel = -y_vel;
        }
        if (x_pos >= SCREEN_WIDTH -dest.w )
        {
            x_pos = SCREEN_WIDTH -dest.w;
            x_vel = -x_vel;
        }
        if (y_pos >= SCREEN_HEIGHT -dest.h )
        {
           y_pos = SCREEN_HEIGHT -dest.h ;
            y_vel = -y_vel;
        }
